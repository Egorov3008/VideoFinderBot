import asyncio
import os

from selenium import webdriver
from selenium.webdriver.chrome.service import Service

from logger import logger


# Настройки прокси (если нужен)
async def get_params_for_ssesion(url: str):
    try:
        # Настройки прокси (если нужен)
        proxy = "http://127.0.0.1:12334"  # Замените на ваш прокси

        # Настройки для браузера
        options = webdriver.ChromeOptions()
        options.add_argument('--headless')  # Фоновый режим
        options.add_argument('--disable-gpu')
        options.add_argument('--no-sandbox')
        options.add_argument(f'--proxy-server={proxy}')  # Прокси (если нужен)

        # Укажите путь к вашему ChromeDriver
        service = Service('/usr/bin/chromedriver')
        driver = webdriver.Chrome(service=service, options=options)

        # Открываем YouTube
        driver.get(url)

        # Ждём, пока страница загрузится
        await asyncio.sleep(5)

        # Получаем User-Agent
        user_agent = driver.execute_script("return navigator.userAgent;")
        logger.info(f"User-Agent: {user_agent}")

        # Получаем куки
        cookies = driver.get_cookies()

        # Создаем папку cookies, если её нет
        os.makedirs('cookies', exist_ok=True)

        # Сохраняем куки в файл
        cookies_file = 'cookies/cookies.txt'
        with open(cookies_file, 'w') as file:
            file.write("# Netscape HTTP Cookie File\n")
            file.write("# This file is generated by yt-dlp. Do not edit.\n")
            for cookie in cookies:
                domain = cookie.get('domain', '')
                if not domain.startswith('.'):
                    domain = '.' + domain
                domain_specified = 'TRUE'
                path = cookie.get('path', '/')
                secure = 'TRUE' if cookie.get('secure', False) else 'FALSE'
                expires = str(int(cookie.get('expiry', 0))) if 'expiry' in cookie else '0'
                name = cookie.get('name', '')
                value = cookie.get('value', '')
                file.write(f"{domain}\t{domain_specified}\t{path}\t{secure}\t{expires}\t{name}\t{value}\n")

        logger.info("Закрываем браузер")
        driver.quit()

        return {
            'cookies_file': cookies_file,
            'user_agent': user_agent
        }

    except Exception as e:
        logger.error(f"Ошибка в get_params_for_ssesion: {e}")
        return {
            'cookies_file': None,
            'user_agent': None
        }